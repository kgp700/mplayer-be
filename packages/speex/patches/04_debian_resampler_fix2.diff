From: Ron <ron@debian.org>
Date: Sun, 4 Nov 2012 03:46:15 +0000 (+1030)
Subject: Be precise computing the resampler with the smallest memory footprint
X-Git-Tag: v1.2rc1-7~4
X-Git-Url: http://anonscm.debian.org/gitweb/?p=users%2Fron%2Fspeex.git;a=commitdiff_plain;h=f527a937ba380a6453522e7b66e510aa077c21ad

Be precise computing the resampler with the smallest memory footprint

The previous version was only wrong in some fairly obscure corner cases,
when oversample < den_rate <= oversample + 8 / filt_len, but since the
direct filter seems to mostly be the fastest, and that would err on the
side of choosing the interpolated one, let's do it right now anyway.

Hint that it was wrong taken from f426ab5260fe9f1618a187fc2a8264dbba4aef08
in opus-tools, with a minor correction to the math.

The optimisation to prefer the direct resampler from there will need some
more investigation to be suitable for broader generic use here.  It won't
always do the expected thing when changing complexity at a given pair of
rates, and can regress to being slower for some rates, on some platforms.
---

diff --git a/libspeex/resample.c b/libspeex/resample.c
index bebd1a8..cb3e7b4 100644
--- a/libspeex/resample.c
+++ b/libspeex/resample.c
@@ -579,7 +579,7 @@ static void update_filter(SpeexResamplerState *st)
    }
    
    /* Choose the resampling type that requires the least amount of memory */
-   if (st->den_rate <= st->oversample)
+   if (st->filt_len*st->den_rate <= st->filt_len*st->oversample+8)
    {
       spx_uint32_t i;
       if (!st->sinc_table)
